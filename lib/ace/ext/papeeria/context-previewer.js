// Generated by CoffeeScript 1.10.0
(function() {
  define(function(require, exports, module) {
    exports.setupPreviewer = function(editor, popoverHandler) {
      var editorContainer, getPopoverPosition, getTopmostRowNumber, handleCurrentFormula, initKaTeX, initPopover, katex, updatePopover;
      katex = null;
      popoverHandler = popoverHandler != null ? popoverHandler : {
        options: {
          html: true,
          placement: "bottom",
          trigger: "manual",
          title: "Formula",
          container: editor.container
        },
        show: function(jqPopoverContainer, content, position) {
          jqPopoverContainer.css(position);
          popoverHandler.options.content = content;
          jqPopoverContainer.popover(popoverHandler.options);
          jqPopoverContainer.popover("show");
        },
        destroy: function(jqPopoverContainer) {
          return jqPopoverContainer.popover("destroy");
        },
        isVisible: function(jqPopoverContainer) {
          return jqPopoverContainer.data().popover.tip().hasClass("in");
        },
        popoverExists: function(jqPopoverContainer) {
          return (jqPopoverContainer.data() != null) && (jqPopoverContainer.data().popover != null);
        },
        setContent: function(jqPopoverContainer, content, position) {
          var jqPopoverElement;
          jqPopoverElement = jqPopoverContainer.data().popover.tip().children(".popover-content");
          return jqPopoverElement.html(content);
        }
      };
      initKaTeX = function(onLoaded) {
        var cssDemoPath, linkDemo, span;
        cssDemoPath = require.toUrl("./katex-demo.css");
        linkDemo = $("<link>").attr({
          rel: "stylesheet",
          href: cssDemoPath
        });
        $("head").append(linkDemo);
        span = $("<span>").attr({
          id: "formula"
        });
        $("body").append(span);
        require(["ace/ext/katex"], function(katexInner) {
          katex = katexInner;
          onLoaded();
        });
      };
      editorContainer = $(editor.container);
      getTopmostRowNumber = function() {
        return parseInt(editorContainer.find("div.ace_gutter > div.ace_layer.ace_gutter-layer.ace_folding-enabled > div:nth-child(1)").text());
      };
      getPopoverPosition = function(cursorRow) {
        var cursorRowPosition, gutter, left, rowSelector, top;
        rowSelector = "div.ace_scroller > div > div.ace_layer.ace_text-layer > div:nth-child(" + (cursorRow + 2 - getTopmostRowNumber()) + ")";
        console.log(rowSelector);
        cursorRowPosition = editorContainer.find(rowSelector).position();
        top = (cursorRowPosition.top + 24) + "px";
        gutter = editorContainer.find("div.ace_gutter > div.ace_layer.ace_gutter-layer.ace_folding-enabled");
        left = gutter.position().left + gutter.width() + 10;
        return {
          top: top,
          left: left
        };
      };
      initPopover = function() {
        var content, cursorRow, popoverPosition;
        cursorRow = editor.getCursorPosition().row;
        popoverPosition = getPopoverPosition(cursorRow);
        try {
          return content = katex.renderToString(editor.session.getLine(cursorRow), {
            displayMode: true
          });
        } finally {
          popoverHandler.show($("#formula"), content, popoverPosition);
        }
      };
      updatePopover = function() {
        var content, cursorRow, e, error;
        console.log("heyooo");
        cursorRow = editor.getCursorPosition().row;
        console.log(cursorRow);
        try {
          console.log("here's the content " + editor.session.getLine(cursorRow));
          return content = katex.renderToString(editor.session.getLine(cursorRow), {
            displayMode: true
          });
        } catch (error) {
          e = error;
          return content = e;
        } finally {
          popoverHandler.setContent($("#formula"), content);
        }
      };
      handleCurrentFormula = function() {
        var currentContext, cursorRow;
        cursorRow = editor.getCursorPosition().row;
        currentContext = editor.session.getContext(cursorRow);
        if (currentContext !== "equation") {
          if (popoverHandler.popoverExists($("#formula"))) {
            return popoverHandler.destroy($("#formula"));
          }
        } else {
          if (popoverHandler.popoverExists($("#formula"))) {
            return updatePopover();
          } else {
            if (katex == null) {
              return initKaTeX(initPopover);
            } else {
              return initPopover();
            }
          }
        }
      };
      return editor.on("changeSelection", handleCurrentFormula);
    };
  });

}).call(this);
