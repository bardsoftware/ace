// Generated by CoffeeScript 1.10.0
(function() {
  define(function(require, exports, module) {
    var SumsAndIntegrals, env, equationEnvironments, equationSnippets, formulasSnippets, greekLetters;
    equationEnvironments = ["equation", "equation*"];
    equationSnippets = (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = equationEnvironments.length; i < len; i++) {
        env = equationEnvironments[i];
        results.push({
          caption: "\\begin{" + env + "}...",
          snippet: "\\begin{" + env + "}\n\t$1\n\\end{" + env + "}",
          meta: "equation"
        });
      }
      return results;
    })();
    SumsAndIntegrals = ["\\sum", "\\int", "\\bigcup", "\\bigsqcup", "\\oint", "\\bigotimes", "\\bigcap", "\\bigvee", "\\oint", "\\bigwedge", "\\biguplus", "\\bigodot", "\\coprod", "\\prod"];
    SumsAndIntegrals = SumsAndIntegrals.map(function(word) {
      return {
        caption: word + "{n}{i=..}{..}",
        snippet: word + "^{${1:n}}_{${2:i=1}}{${3}}",
        score: 1,
        meta: "Sums and integrals"
      };
    });
    formulasSnippets = [
      {
        caption: "\\frac{num}{denom}",
        snippet: "\\frac{${1:num}}{${2:denom}}",
        score: 4,
        meta: "Math"
      }, {
        caption: "\\sqrt{n}",
        snippet: "\\sqrt{${1:n}}",
        score: 4,
        meta: "Math"
      }, {
        caption: "\\sqrt[k]{n}",
        snippet: "\\sqrt[${1:k}]{${2:n}}",
        score: 4,
        meta: "Math"
      }, {
        caption: "\\binom{n}{k}",
        snippet: "\\binom{${1:n}}{${2:k}}",
        score: 4,
        meta: "Math"
      }
    ];
    greekLetters = ["\\gamma", "\\delta", "\\theta", "\\lambda", "\\nu", "\\xi", "\\pi", "\\sigma", "\\upsilon", "\\phi", "\\chi", "\\psi", "\\omega"];
    greekLetters = greekLetters.concat(greekLetters.map(function(word) {
      return "\\" + word[1].toUpperCase() + word.substring(2);
    }));
    greekLetters = greekLetters.concat(["\\alpha", "\\beta", "\\chi", "\\nu", "\\eta", "\\zeta", "\\rho", "\\mu", "\\epsilon", "\\iota", "\\kappa", "\\tau", "\\varepsilon", "\\varsigma", "\\varphi", "\\varrho", "\\vartheta", "\\varkappa"]);
    greekLetters = greekLetters.map(function(word) {
      return {
        caption: word,
        value: word,
        score: 2,
        meta: "Greek Letter"
      };
    });
    return SumsAndIntegrals.concat(formulasSnippets.concat(greekLetters));
  });

}).call(this);
