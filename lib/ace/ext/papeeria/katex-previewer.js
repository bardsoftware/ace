// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(function(require, exports, module) {
    var getContext;
    getContext = require("ace/ext/papeeria/latex_parsing_context").getContext;
    exports.setupPreviewer = function(editor, popoverHandler) {
      var contextHandler, initKaTeX, jqEditorContainer, jqFormula, katex, selectionHandler;
      katex = null;
      if (popoverHandler == null) {
        popoverHandler = new ((function() {
          function _Class() {
            this.setContent = bind(this.setContent, this);
            this.popoverExists = bind(this.popoverExists, this);
            this.destroy = bind(this.destroy, this);
            this.show = bind(this.show, this);
          }

          _Class.prototype.options = {
            html: true,
            placement: "bottom",
            trigger: "manual",
            title: "Formula",
            container: editor.container
          };

          _Class.prototype.show = function(jqPopoverContainer, content, position) {
            jqPopoverContainer.css(position);
            this.options.content = content;
            jqPopoverContainer.popover(popoverHandler.options);
            jqPopoverContainer.popover("show");
          };

          _Class.prototype.destroy = function(jqPopoverContainer) {
            return jqPopoverContainer.popover("destroy");
          };

          _Class.prototype.popoverExists = function(jqPopoverContainer) {
            return (jqPopoverContainer.data() != null) && (jqPopoverContainer.data().popover != null);
          };

          _Class.prototype.setContent = function(jqPopoverContainer, content) {
            var jqPopoverElement;
            jqPopoverElement = jqPopoverContainer.data().popover.tip().children(".popover-content");
            return jqPopoverElement.html(content);
          };

          _Class.prototype.setPosition = function(jqPopoverContainer, position) {
            var jqPopoverElement;
            jqPopoverElement = jqPopoverContainer.data().popover.tip();
            return jqPopoverElement.css(position);
          };

          return _Class;

        })());
      }
      initKaTeX = function(onLoaded) {
        var cssDemoPath, linkDemo, span;
        cssDemoPath = require.toUrl("./katex-demo.css");
        linkDemo = $("<link>").attr({
          rel: "stylesheet",
          href: cssDemoPath
        });
        $("head").append(linkDemo);
        span = $("<span>").attr({
          id: "formula"
        });
        $("body").append(span);
        require(["ace/ext/katex"], function(katexInner) {
          katex = katexInner;
          onLoaded();
        });
      };
      jqEditorContainer = $(editor.container);
      jqFormula = function() {
        return $("#formula");
      };
      contextHandler = new ((function() {
        _Class.removeRegex = /\\end\{equation\}|\\begin\{equation\}|\\label\{[^\}]*\}/g;

        _Class.getEquationRange = function(cursorRow) {
          var end, i, start;
          i = cursorRow;
          while (getContext(editor.session, i - 1) === "equation") {
            i -= 1;
          }
          start = i;
          while (getContext(editor.session, i + 1) === "equation") {
            i += 1;
          }
          end = i;
          return [start, end];
        };

        _Class.getWholeEquation = function(start, end) {
          return editor.session.getLines(start, end).join(" ").replace(_Class.removeRegex, "");
        };

        _Class.getPopoverPosition = function(row) {
          return {
            top: (editor.renderer.textToScreenCoordinates(row + 2, 1).pageY) + "px",
            left: (jqEditorContainer.position().left) + "px"
          };
        };

        function _Class() {
          this.handleCurrentContext = bind(this.handleCurrentContext, this);
          this.updatePosition = bind(this.updatePosition, this);
          this.delayedUpdatePopover = bind(this.delayedUpdatePopover, this);
          this.updatePopover = bind(this.updatePopover, this);
          this.initPopover = bind(this.initPopover, this);
          this.getCurrentFormula = bind(this.getCurrentFormula, this);
          var ref;
          ref = [null, null], this.curStart = ref[0], this.curEnd = ref[1];
          this.currentDelayedUpdateId = null;
          this.contextPreviewExists = false;
        }

        _Class.prototype.getCurrentFormula = function() {
          return katex.renderToString(this.constructor.getWholeEquation(this.curStart, this.curEnd), {
            displayMode: true
          });
        };

        _Class.prototype.initPopover = function() {
          var content, cursorRow, e, error, popoverPosition, ref;
          cursorRow = editor.getCursorPosition().row;
          ref = this.constructor.getEquationRange(cursorRow), this.curStart = ref[0], this.curEnd = ref[1];
          popoverPosition = this.constructor.getPopoverPosition(this.curEnd);
          try {
            return content = this.getCurrentFormula();
          } catch (error) {
            e = error;
            return content = e;
          } finally {
            popoverHandler.show(jqFormula(), content, popoverPosition);
          }
        };

        _Class.prototype.updatePopover = function() {
          var content, e, error;
          try {
            return content = this.getCurrentFormula();
          } catch (error) {
            e = error;
            return content = e;
          } finally {
            popoverHandler.setContent(jqFormula(), content);
          }
        };

        _Class.prototype.delayedUpdatePopover = function() {
          if (this.currentDelayedUpdateId != null) {
            clearTimeout(this.currentDelayedUpdateId);
          }
          return this.currentDelayedUpdateId = setTimeout(((function(_this) {
            return function() {
              _this.updatePopover();
              return _this.currentDelayedUpdateId = null;
            };
          })(this)), 1000);
        };

        _Class.prototype.updatePosition = function() {
          return popoverHandler.setPosition(jqFormula(), this.constructor.getPopoverPosition(this.curEnd));
        };

        _Class.prototype.handleCurrentContext = function() {
          var currentContext;
          currentContext = getContext(editor.session, editor.getCursorPosition().row);
          if (!this.contextPreviewExists && currentContext === "equation") {
            this.contextPreviewExists = true;
            if (katex == null) {
              initKaTeX(this.initPopover);
            } else {
              this.initPopover();
            }
            editor.on("change", this.delayedUpdatePopover);
            return editor.session.on("changeScrollTop", this.updatePosition);
          } else if (this.contextPreviewExists && currentContext !== "equation") {
            this.contextPreviewExists = false;
            editor.off("change", this.delayedUpdatePopover);
            editor.session.off("changeScrollTop", this.updatePosition);
            return popoverHandler.destroy(jqFormula());
          }
        };

        return _Class;

      })());
      selectionHandler = new ((function() {
        function _Class() {
          this.createPopover = bind(this.createPopover, this);
          this.renderSelectionUnderCursor = bind(this.renderSelectionUnderCursor, this);
          this.hideSelectionPopover = bind(this.hideSelectionPopover, this);
        }

        _Class.prototype.hideSelectionPopover = function() {
          popoverHandler.destroy(jqFormula());
          editor.off("changeSelection", this.hideSelectionPopover);
          editor.session.off("changeScrollTop", this.hideSelectionPopover);
          editor.session.off("changeScrollLeft", this.hideSelectionPopover);
        };

        _Class.prototype.renderSelectionUnderCursor = function() {
          var content, cursorPosition, e, error, popoverPosition;
          try {
            cursorPosition = $("textarea.ace_text-input").position();
            popoverPosition = {
              top: (cursorPosition.top + 24) + "px",
              left: cursorPosition.left + "px"
            };
            return content = katex.renderToString(editor.getSelectedText(), {
              displayMode: true
            });
          } catch (error) {
            e = error;
            return content = e;
          } finally {
            popoverHandler.show(jqFormula(), content, popoverPosition);
            editor.on("changeSelection", this.hideSelectionPopover);
            editor.session.on("changeScrollTop", this.hideSelectionPopover);
            editor.session.on("changeScrollLeft", this.hideSelectionPopover);
            return;
          }
        };

        _Class.prototype.createPopover = function(editor) {
          if (!contextHandler.contextPreviewExists) {
            if (katex == null) {
              initKaTeX(this.renderSelectionUnderCursor);
              return;
            }
            return this.renderSelectionUnderCursor();
          }
        };

        return _Class;

      })());
      editor.commands.addCommand({
        name: "previewLaTeXFormula",
        bindKey: {
          win: "Alt-p",
          mac: "Alt-p"
        },
        exec: selectionHandler.createPopover
      });
      editor.on("changeSelection", contextHandler.handleCurrentContext);
    };
  });

}).call(this);
